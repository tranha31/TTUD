#include <iostream>
#include <vector>
#include <bits/stdc++.h>

using namespace std;
const int N = 35;

int n, k, m, dem = 0;
vector<int> a[N+1];
int dd[N];
int curl = 0;
int trace[N];

void Try(int v){
    for(int i=0; i<a[v].size(); i++){
        //cout << dem << endl;
        if(dd[a[v].at(i)] == 1){
            //cout << "11111" << endl;
            /*if(trace[curl -1 ] != a[v].at(i)){
                if(curl+1 == k){
                    dem++;
                }
            }*/
            continue;
        }
        else{
            dd[a[v].at(i)] = 1;
            curl++;
            trace[curl] = a[v].at(i);
            if(curl == k){
                dem++;
            }
            else{
                Try(a[v].at(i));
            }
            trace[curl] = 0;
            curl--;
            dd[a[v].at(i)] = 0;
        }
    }
}

int main(){
    cin >> n >> k >> m;
    int x, y;
    for(int i=0; i<m; i++){
        cin >> x >> y;
        a[x].push_back(y);
        a[y].push_back(x);
    }
    for(int i=1; i<=n; i++){
        dd[i] = 1;
        trace[curl] = i;
        Try(i);
        //cout << dem << endl;
        //dd[i] = 0;
        memset(dd, 0, sizeof(dd));
        memset(trace, 0, sizeof(trace));
        curl = 0;
    }
    cout << dem/2;
}