#include <bits/stdc++.h>

using namespace std;

const int N = 10000005;
const int K = 1000000007;
int n, k, l;
long long dp[10005], dp1[10005], a[10005], b[10005], c[10005];
vector<int> kq, vt;
int even = 0;

void Trace(int i){
    for(int j=1; j<=i; j++){
        if(a[i]>a[j] && dp[i] == dp[j]+a[i]){
            Trace(j);
            kq.push_back(j);
            break;
        }
    }
}

void Trace1(int i){
    for(int j=n; j>=i; j--){
        if(a[i]>a[j] && dp1[i] == dp1[j]+a[i]){
            Trace1(j);
            vt.push_back(j);
            break;
        }
    }
}

int main(){

    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    cin >> n;
    for(int i=1; i<=n; i++){
        cin >> a[i];
        dp[i] = a[i];
        dp1[i] = a[i];
    }
    long long ans = 0;
    for(int i=1; i<=n; i++){
        for(int j=1; j<=i; j++){
            if(a[i] > a[j]){
                dp[i] = max(dp[i], a[i]+dp[j]);
            }
        }
    }
    for(int i=n; i>=1; i--){
        for(int j=n; j>=i; j--){
            if(a[i] > a[j]){
                dp1[i] = max(dp1[i], a[i]+dp1[j]);
            }
        }
    }
    for(int i=1; i<=n; i++){
        ans = max(ans, dp[i]+dp1[i]-a[i]);
    }
    int tmp = 0;
    for(int i=1; i<=n; i++){
        if(ans == dp[i]+dp1[i]-a[i]){
            tmp = i;
            break;
        }
    }

    cout << ans << endl;
    Trace(tmp);
    Trace1(tmp);
    for(int i=0; i<kq.size(); i++){
        cout << kq.at(i) << " ";
    }
    cout << tmp << " ";
    for(int i=vt.size()-1; i>=0; i--){
        cout << vt.at(i) << " ";
    }
    return 0;
}
