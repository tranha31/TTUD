#include <bits/stdc++.h>

using namespace std;

const int N = 10000005;
const int K = 1000000007;
int n, k, l, W, m;
long long dp[10005][10005], dp1[10005], a[10005], c[10005];
vector<int> kq, vt;
int even = 0;

void Trace(int i, int x){
    if(x <= 0) return;
    if(i <= 0) return;
    if(x >= a[i]){
        if(dp[i][x] == dp[i][x-a[i]]+1){
            Trace(i, x-a[i]);
            kq.push_back(a[i]);
        }
    }
    else{
        Trace(i-1, x);
    }
}

int main(){

    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    cin >> n >> m;
    for(int i=1; i<=n; i++){
        cin >> a[i];
    }
    for(int i=1; i<=n; i++){
        dp[i][0] = 0;
    }
    for(int j=1; j<=m; j++){
        dp[0][j] = INT_MAX;
    }
    dp[0][0] = 0;
    for(int i=1; i<=n; i++){
        for(int j=1; j<=m; j++){
            if(j>=a[i]){
                dp[i][j] = min(dp[i-1][j], 1+dp[i][j-a[i]]);
            }
            else{
                dp[i][j] = dp[i-1][j];
            }
        }
    }
    int ans = INT_MAX;
    int tmp = 0;
    for(int i=1; i<=n; i++){
        if(ans > dp[i][m]){
            ans = dp[i][m];
            tmp = i;
        }
    }
    if(ans == INT_MAX) cout << 0 << '\n';
    else cout << ans << '\n';
    Trace(tmp, m);
    for(int i=0; i<kq.size(); i++){
        cout << kq.at(i) << " ";
    }
    return 0;
}
