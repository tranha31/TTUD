#include <bits/stdc++.h>

using namespace std;

const int N = 10000005;
const int K = 1000000007;
int n, k, l, W, m;
long long dp[10005][10005], dp1[10005], b[10005], c[10005];
vector<int> kq, vt;
int even = 0;

struct tui{
    long long a, c;
};

int main(){

    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    string s1, s2;
    cin >> s1 >> s2;
    n = s1.size();
    m = s2.size();
    for(int i=0; i<=n; i++){
        for(int j=0; j<=m; j++){
            if(i==0 || j==0){
                dp[i][j] = i+j;
            }
            else if(s1[i-1] == s2[j-1]){
                dp[i][j] = dp[i-1][j-1];
            }
            else{
                dp[i][j] = min(dp[i-1][j-1], min(dp[i][j-1], dp[i-1][j])) + 1;
            }
        }
    }

    cout << dp[n][m] << '\n';
    return 0;
}
