#include <bits/stdc++.h>

using namespace std;

int n, k, l, W, m;
long long dp1[100005], a[100005];
vector<long long> kq, vt;

void Trace(int i){
    if(i<=0) return;
    int tmp = i;
    for(int j=i; j>=1; j--){
        if(dp1[j] == dp1[i]){
            tmp = j;
        }
        else{
            break;
        }
    }
    if(tmp > 2){
        if(dp1[tmp] == dp1[tmp-2]+a[tmp]){
            Trace(tmp-2);
            kq.push_back(tmp);
        }
        else if(dp1[tmp] == a[tmp]){
            kq.push_back(tmp);
            return;
        }
        else{
            Trace(tmp-1);
        }
    }
    else{
        kq.push_back(tmp);
        return;
    }
}

int main(){

    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    cin >> n;
    for(int i=1; i<=n; i++){
        cin >> a[i];
    }
    dp1[1] = a[1];
    dp1[2] = max(a[1], a[2]);
    for(int i=3; i<=n; i++){
        dp1[i] = max(dp1[i-2]+a[i], dp1[i-1]);
        dp1[i] = max(dp1[i], a[i]);
    }
    cout << dp1[n] << '\n';
    Trace(n);
    cout << kq.size() << '\n';
    for(int i=0; i<kq.size(); i++){
        cout << kq.at(i) << " ";
    }
    return 0;
}
