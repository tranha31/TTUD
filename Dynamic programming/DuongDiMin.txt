#include <bits/stdc++.h>

using namespace std;

const int N = 10000005;
const int K = 1000000007;
int n, k;
long long dp[10005][10005], a[10005][10005], b[10005];
vector<int> kq, vt;
int even = 0;

int main(){

    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    cin >> n >> k;
    memset(dp, 0, sizeof(dp));
    for(int i=1; i<=n; i++){
        for(int j=1; j<=k; j++){
            cin >> a[i][j];
        }
    }
    for(int i=1; i<=n; i++){
        for(int j=1; j<=k; j++){
            if(i==1 && j==1) dp[i][j] = a[i][j];
            else if(i==1) dp[i][j] = a[i][j] + dp[i][j-1];
            else if(j==1) dp[i][j] = a[i][j] + dp[i-1][j];
            else dp[i][j] = min(dp[i-1][j-1], min(dp[i-1][j], dp[i][j-1])) + a[i][j];
        }
    }
    cout << dp[n][k] << endl;
    return 0;
}
