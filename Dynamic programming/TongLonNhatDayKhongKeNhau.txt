#include <bits/stdc++.h>

using namespace std;

const int N = 10000005;
const int K = 1000000007;
int n, k, l;
long long dp[10005], dp1[10005], a[10005], c[10005];
vector<int> kq, vt;
int even = 0;

void Trace(int i){
    if(i <= 0) return;
    int tmp = i;
    for(int j=i-1; j>=1; j--){
        if(dp[j] == dp[i]){
            tmp = j;
        }
        else{
            break;
        }
    }
    if(dp[tmp] == dp[tmp-2]+a[tmp]){
        if(dp[tmp-2] == dp[tmp-3]){
            Trace(tmp-3);
            kq.push_back(tmp);
        }
        else{
            Trace(tmp-2);
            kq.push_back(tmp);
        }
    }
    else{
        Trace(tmp-1);
    }
}

int main(){

    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    cin >> n;
    for(int i=1; i<=n; i++){
        cin >> a[i];
    }
    dp[1] = a[1];
    dp[2] = max(a[1], a[2]);
    for(int i=3; i<=n; i++){
        dp[i] = max(dp[i-2]+a[i], dp[i-1]);
    }
    cout << dp[n] << '\n';
    Trace(n);
    for(int i=0; i<kq.size(); i++){
        cout << kq.at(i) << " ";
    }

    return 0;
}
