#include <bits/stdc++.h>

using namespace std;

const int N = 10000005;
const int K = 1000000007;
int n, k, l;
long long dp[105][105][105], a[10005], b[10005], c[10005];
vector<int> kq, vt;
int even = 0;

int main(){

    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    cin >> n >> k >> l;
    for(int i=1; i<=n; i++){
        cin >> a[i];
    }
    for(int i=1; i<=k; i++){
        cin >> b[i];
    }
    for(int i=1; i<=l; i++){
        cin >> c[i];
    }
    memset(dp, 0, sizeof(dp));
    for(int i=1; i<=n; i++){
        for(int j=1; j<=k; j++){
            for(int m=1; m<=l; m++){
                if(a[i] == b[j] && b[j] == c[m]){
                    dp[i][j][m] = 1 + dp[i-1][j-1][m-1];
                }
                else{
                    dp[i][j][m] = max(dp[i-1][j][m], max(dp[i][j-1][m], dp[i][j][m-1]));
                }
            }
        }
    }
    cout << dp[n][k][l] << endl;
    return 0;
}
